<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>qa7.ru</title><link href="http://qa7.ru/" rel="alternate"></link><link href="http://qa7.ru/feeds/misc.atom.xml" rel="self"></link><id>http://qa7.ru/</id><updated>2015-12-18T20:58:20+03:00</updated><entry><title>Извинительный</title><link href="http://qa7.ru/blog/2015/12/18/izvinitelnyi/" rel="alternate"></link><updated>2015-12-18T20:58:20+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-12-18:blog/2015/12/18/izvinitelnyi/</id><summary type="html">&lt;p&gt;Друзья так уж получилось, что я переехал жить из России в Канаду, в славный город Виннипег, провинция Манитоба. За те 3 недели, что я здесь я успел сделать многое. Снять квартиру, купить машину, отходить на курсы для иммигрантов и, самое главное, найти работу :) Поэтому сами понимаете, немного не до блога. Но я постараюсь исправиться, и продолжить выдавать как минимум один пост в месяц. &lt;/p&gt;
&lt;p&gt;А пока я хочу вам порекомендовать, slack чат для тестировщиков, в котором уже почти тысяча человек (подумать только, тысяча тестировщиков в одном месте). В котором вам всегда помогут советом, и ответят на вопросы. Есть каналы по разным темам:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;автоматизация&lt;/li&gt;
&lt;li&gt;обучение&lt;/li&gt;
&lt;li&gt;английский&lt;/li&gt;
&lt;li&gt;безопасность&lt;/li&gt;
&lt;li&gt;и многое другое&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Есть даже канал для HR, где не только предлагают работу, но еще можно попросить покритиковать резюме, чем новички в тестировании активно пользуются. &lt;/p&gt;
&lt;p&gt;На самом деле странно, что вы еще не в этом чате, ибо это наверно самый большой русскоязычный канал для тестировщиков, который объединяет тестировщиков со всего мира.&lt;/p&gt;
&lt;p&gt;Чтоб попасть в чат, нужно пройти по этой &lt;a href="https://software-testers.herokuapp.com/"&gt;ссылке&lt;/a&gt; ввести свой email, и получить на него приглашение в чат. &lt;/p&gt;
&lt;p&gt;Я там конечно же тоже есть, мой ник erikstb. Приходите, пообщаемся :)&lt;/p&gt;</summary></entry><entry><title>Как поднять свой VPN</title><link href="http://qa7.ru/blog/2015/11/06/kak-podniat-svoi-vpn/" rel="alternate"></link><updated>2015-11-06T12:36:23+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-11-06:blog/2015/11/06/kak-podniat-svoi-vpn/</id><summary type="html">&lt;p&gt;Прошлый раз я во всю пел хвалебные оды хостингу Digitalocean, где помимо прочего я обещал рассказать как поднять на этом хостинге свой vpn сервер с помощью Docker. За чем нужен свой vpn? Это каждый решает сам для себя. Можно например посещать сайты, которые по каким либо причинам недоступны из той страны, где вы находитесь. Или вам необходимо притвориться чуваком с американским ip и т.д. Сразу скажу что установка и настройка не потребует каких либо специальных знаний, за исключением может быть, начальных знаний командной строки unix.&lt;/p&gt;
&lt;p&gt;Собственно мы поднимем с помощью docker виртуалку на котором будет крутиться наш openvpn сервер. Мы воспользуемся уже хорошо зарекомендовавшим себя образом &lt;a href="https://github.com/jpetazzo/dockvpn"&gt;jpetazzo&lt;/a&gt;. Первым делом вам понадобится учетная запись на digitalocean.com. Если вы заведете ее по моей &lt;a href="https://www.digitalocean.com/?refcode=823012346b9c"&gt;реферальной ссылке&lt;/a&gt;, то получите 10$ на счет, чего хватит минимум на 2 месяца работы vpn (Целых два! Халявных! Месяца! Карл!).&lt;/p&gt;
&lt;p&gt;Далее вам нужно создать свой droplet(так в digitalocean называют облачные виртуалки). Далее по шагам:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Нажимаете большую зеленую кнопку "Create Droplet"&lt;/li&gt;
&lt;li&gt;Вводите имя дроплета (напр. 'my-openvpn')&lt;/li&gt;
&lt;li&gt;Выбираете размер дроплета. Самого маленького за $5 вполне достаточно.&lt;/li&gt;
&lt;li&gt;Выбираете регион где будет размещен ваш сервер (напр. New York, если нужен американский IP, или другой на выбор)&lt;/li&gt;
&lt;li&gt;Выбираете образ. Где переходите на закладку Applications и выбираете образ с предустановленным docker. Docker 1.9.0 on 14.04&lt;/li&gt;
&lt;li&gt;Нажимаете Create Droplet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ждете примерно минуту пока создается дроплет. После того как дроплет будет создан вам придет email, котором будет указан ip вашего вновь созданного дроплета и логин с паролем. Теперь наверно самое сложное, это зайти по ssh на ваш дроплет. Можно воспользоваться любым клиентом ssh и данными из пришедшего email. Либо на том же сайте digitalocean воспользоваться браузерной консолью (в разделе Access вашего дроплета, кнопка Console Access). Дальнейшие мои инструкции аналогичны как для первого способа, так и для второго. При первом входе вас попросят сменить пароль, поэтому запомните его. Если что, его можно будет сбросить через личный кабинет digitalocean.&lt;/p&gt;
&lt;p&gt;Собственно зайдя на дроплет в консоли вводите следующую команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;CID=$(docker run -d --privileged -p 1194:1194/udp -p 443:443/tcp jpetazzo/dockvpn)
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;выглядит страшно, но, тот кто читал мои предыдущие статьи посвященные докеру, поймет :)
Эта команда проработает какое-то время и сама завершится. 
Далее запускаете контейнер следующей командой:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;docker run -t -i -p 8080:8080 --volumes-from &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;CID&lt;/span&gt;&lt;span class="x"&gt; jpetazzo/dockvpn serveconfig&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;это команда выдаст url типа &lt;code&gt;https://1.1.1.1:8080/&lt;/code&gt; (у вас естественно будет другой). Имейте в виду, что пока работает выше указанна команда, пройдя по этому урлу вы сможете скачать файл конфигурации для вашего vpn клиента, поэтому не останавливайте ее пока не скачаете конфигурации на нужном количестве ваших устройств. &lt;/p&gt;
&lt;p&gt;Клиентов vpn много, я для mac использую Tunnelblick. Для windows, iOS, android можно посмотреть клиенты &lt;a href="https://openvpn.net/"&gt;тут&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;После того как скачали и установили конфигурации на клиенты vpn, работающую команду нужно остановить (&lt;code&gt;ctrl+c&lt;/code&gt;). &lt;/p&gt;
&lt;p&gt;Да и напоминаю вам, что у созданного дроплета есть ограничение по трафику - 1000 Gb. Это очень много, но не безлимитно, посерфить послушать музыку и посмотреть кино, вам хватит точно.&lt;/p&gt;</summary></entry><entry><title>Хостинг для тестировщика</title><link href="http://qa7.ru/blog/2015/10/10/khosting-dlia-testirovshchika/" rel="alternate"></link><updated>2015-10-10T12:25:53+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-10-10:blog/2015/10/10/khosting-dlia-testirovshchika/</id><summary type="html">&lt;p&gt;Какой тестировщик не хотел сделать что-нибудь этакое и свое? показать всем что я тоже умею, не хуже, чем те программисты! Написать свое приложение, свою поисковую систему, свой блог в конце концов. Написать написали, даже вроде локально работает надо где-то теперь это разместить, и показать свое творение всему миру. И тут во весь рост встает проблема хостинга вашего приложения. У меня есть выход для вас. Это простой, понятный и самое главное дешевый хостинг. Это не тот хостинг в котором вы практически ничего не можете, где вам позволено развернуть wordpress или другой php cms. Трудно придумать кейс, в котором этот облачный хостинг вас в чем-то ограничит. Вы получите полноценную виртуальную машину со своим ip и операционной системой на выбор. Сейчас я дам вам ссылку по которой вы сможете зарегистрироваться. Да это реферальная &lt;a href="https://www.digitalocean.com/?refcode=823012346b9c"&gt;ссылка&lt;/a&gt;, если по ней вы зарегистрируетесь то вы получите $10 на счет, этого будет достаточно на оплату двух месяцев. Я же что-то получу только в случае если вам сервис понравится и вы решите заплатить за него, и продолжить им пользоваться.&lt;/p&gt;
&lt;p&gt;Это хостинг провайдер расположен тут &lt;a href="https://www.digitalocean.com/?refcode=823012346b9c"&gt;https://www.digitalocean.com/&lt;/a&gt;
И имя ему:&lt;/p&gt;
&lt;p&gt;&lt;img alt="digitalocean" src="http://qa7.ru/images/gallery/other/digitalocean.png" style="width: 410px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Итак что вы получите от этого сервиса если зарегистрируетесь по моей &lt;a href="https://www.digitalocean.com/?refcode=823012346b9c"&gt;ссылке&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 месяца бесплатного пользования виртуальной машиной со своим выделенным ip&lt;/li&gt;
&lt;li&gt;достаточно производительную виртуалку с 512Mb оперативки, 20GB SSD, 1 CPU (этого достаточно на несколько сайтов и пару запущенных docker контейнеров)&lt;/li&gt;
&lt;li&gt;выбор из 7 датацентров где будет расположена ваша виртуальная машина, включая северную америку, европу и азию&lt;/li&gt;
&lt;li&gt;выбор из 6 имиджей OS включая Ubuntu, FreeBSD, CentOS&lt;/li&gt;
&lt;li&gt;возможность настройки автоматических бэкапов ($1 в месяц) &lt;/li&gt;
&lt;li&gt;очень отзывчивый и грамотный support&lt;/li&gt;
&lt;li&gt;и многое другое&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В качестве бонуса если вы попросите, я вам дам  промокод еще на $10, итого будет 4 месяца бесплатного хостинга!&lt;/p&gt;
&lt;p&gt;Кстати чуть позже планирую статью как с помощью digitalocean и docker  поднять свой собственный VPN сервер. С его помощью, подключившись к нему вы получите IP той страны где расположен датацентр, например США, и сможете серфить по интернету и пользоваться теми сервисами которые могут быть вам недоступны из страны вашего проживания.&lt;/p&gt;</summary></entry><entry><title>Дефект ценой в 440 миллионов долларов</title><link href="http://qa7.ru/blog/2015/09/12/defekt-tsenoi-v-440-millionov-dollarov/" rel="alternate"></link><updated>2015-09-12T15:44:29+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-09-12:blog/2015/09/12/defekt-tsenoi-v-440-millionov-dollarov/</id><summary type="html">&lt;p&gt;Вы никогда не задумывались к каким серьезным последствиям могут привести ошибки? Какова цена старого и не поддерживаемого кода? Сколько стоит не протестировать устаревшую и казалось бы ненужную функциональность? И сколько раз мы слышали, что этот код никогда не вызовется потому что ....? Это грустная история взаимодействия IT профессионалов, разработчиков, администраторов и тестировщиков. &lt;/p&gt;
&lt;h2&gt;Предыстория&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Knight_Capital_Group"&gt;Knight Capital Group&lt;/a&gt; (далее KCG) - американская глобальная финансовая компания, оперирующая на рынке финансовых услуг. В 2012 году Knight Capital Group был крупнейшим игроком на рынке электронной высокочастотной торговли, с долей рынка 17.3% NYSE, и 16.9% NASDAQ на тот момент. Объем торговли превышал в среднем &lt;strong&gt;21 млрд долларов ежедневно!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ru.wikipedia.org/wiki/%D0%9D%D1%8C%D1%8E-%D0%99%D0%BE%D1%80%D0%BA%D1%81%D0%BA%D0%B0%D1%8F_%D1%84%D0%BE%D0%BD%D0%B4%D0%BE%D0%B2%D0%B0%D1%8F_%D0%B1%D0%B8%D1%80%D0%B6%D0%B0"&gt;NYSE&lt;/a&gt; - в тот период времени планировала к запуску 1 августа 2012 года, новую программу ликвидности (Retail Liquidity Program - в дальнейшем RLP), эта программа предлагала продвинутую оценку розничным инвесторам работающим через брокеров, таких как Knight Capital Group(KCG). Для подготовки к этому событию KCG обновила свои автоматические алгоритмические маршрутизаторы высокочастотной торговли известных как SMARS. Одной из ключевых особенностей SMARS - это получение заявок от других компонентов торговой платформы Knight ("родительских"" заявок), и, по мере необходимости на основе имеющейся ликвидности, отправка одного или нескольких представительских (или "дочерних") заявок внешним службам на исполнение. Другими словами SMARS получал "большую" заявку, разбивал ее на мелкие части и отсылал их продавцам/покупателям на исполнение, в пределах "большой" заявки. Чем больше была заявка, на тем больше мелких частей она разбивалась. &lt;/p&gt;
&lt;p&gt;При развертывании новый RLP код в SMARS должен был заменить неиспользуемый код в соответствующей части маршрутизатора. Этот неиспользуемый код ранее был нужен для функции Power Peg (эту функциональность компания не применяла 8 лет!!). Несмотря на это, она оставалась рабочей и вызываемой во время развертывания RLP. Новый RLP код использовал флаг, который ранее был привязан к Power Peg. Knight хотела удалить код Power Peg, чтобы при активации этого флага использовалась новая функциональность RLP, а не Power Peg.&lt;/p&gt;
&lt;h2&gt;Что-то пошло не так&lt;/h2&gt;
&lt;p&gt;В период с 27 по 31 июля 2012 года KCG в ручном режиме обновляла ограниченное количество своих серверов в день - всего 8 серверов. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;в ходе деплоемента один из специалистов KCG не залил новый код на одну из машин SMARS. Второго специалиста который бы контролировал действия первого и перепроверил работу, не было. Никто в KCG не понял, что старый код Power Peg не был удален с восьмого сервера, а код поддерживающий RPL не был добавлен. В KCG не существовал письменного регламента данной процедуры проверки. (из &lt;a href="http://www.sec.gov/litigation/admin/2013/34-70694.pdf"&gt;отчета&lt;/a&gt; Комиссии по ценным бумагам. | Release No. 70694 | October 16, 2013)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;В 9.30 утра 1 августа 2012 года рынки открылись и KCG начала процессить заявки своих брокеров от имени заказчиков через RPL. Семь серверов обрабатывали заявки правильно. Но заявки, отправленные на 8 сервер с установленным флагом запуска, запустили дефектный код Power Peg, который всё ещё присутствовал на этом сервере. В результате сервер воспринял заявки как родительские и начал отправлять дочерние заявки в трейдинговые центры.&lt;/p&gt;
&lt;h2&gt;Атака зомби-кода&lt;/h2&gt;
&lt;p&gt;Важно понимать, что делал код Power Peg. Эта функциональность помимо прочего подсчитывала купленные/проданные ценные бумаги в выполняемых дочерних заявках и сигнализировала о необходимости прекращения размещения дочерних заявках после того, как родительская заявка была выполнена (так называемый трекинг заявок). Этот трекинг заявок был в 2005 году перемещен на более раннюю стадию выполнения кода. И когда на восьмой сервер приходили заявки с флагом который предназначался для RPL, Power Peg начал их процессить, но так-как функции трекинга не было, начался так называемый бесконечный цикл купли-продажи.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 августа Knight также получала заявки, которые относились к RPL, но предназначались для торговли до открытия рынка. Сервера SMARS обрабатывали эти заявки и, начиная примерно с 8:01 утра, внутренние системы генерировали автоматические сообщения (под названием «отказ BNET»), которые ссылались на SMARS и описывали ошибку как «Power Peg отключен». Система Knight отправила 97 таких сообщений до 9:30 утра, когда открылся рынок. Сообщения подобного типа не расценивались системой, как опасные, а персонал вообще не читал их. (из &lt;a href="http://www.sec.gov/litigation/admin/2013/34-70694.pdf"&gt;отчета&lt;/a&gt; Комиссии по ценным бумагам. | Release No. 70694 | October 16, 2013)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;45 минут ада&lt;/h2&gt;
&lt;p&gt;Можете себе представить систему высокочастотной торговли ценными бумагами которая способная отсылать и исполнять тысячи заявок в минуту, функция трекинга исполнения заявок у которой отключена? Да, это было примерно так все плохо.&lt;/p&gt;
&lt;p&gt;В 9.30 когда рынки открылись люди начали быстро догадываться, что что-то не так. В 9.31 для многих людей на Уолл-Стрит стало очевидно, что происходит что-то серьезное. Рынок наводнили заявки, неординарной стоимости для обычных объемов торгов на определенные ценные бумаги. В 9.32 трейдеры недоумевали почему это не заканчивается. Для высокочастотных торгов этот период времени был равноценен вечности. В течении 45 минут Knight создала более 50% всего объема торгов, повышая стоимость определенных бумаг на 10%. Как результат стоимость остальных ценных бумаг была снижена в ответ на ошибочные торги.&lt;/p&gt;
&lt;p&gt;В течении 45 минут KCG пыталась оценить обстановку и остановить ошибочные торги. У KCG не было рубильника останавливающего торги, равно как и документированного регламента как действовать в случае подобной нештатной ситуации. Они пытались диагностировать проблему в живом окружении обслуживающем 8 миллионов операций каждую минуту. Так как они не понимали причину возникновения проблемных заявок, они начали откатывать изменения. Откатывать те изменения которые работали корректно. Что только усугубило положение, так как Power Peg  начал работать на всех серверах, а не на одном как ранее. В конце концов они смогли остановить работу системы через 45 минут после ее старта.&lt;/p&gt;
&lt;p&gt;За те 45 минут, что рынок был открыт, Power Peg код получил и отпроцесиил 212 родительских заявок. Как результат SMARS сгенерировал 4 миллиона транзакций по 154 ценным бумагам для 397 миллионов акций. Knight приняла $3.5 миллиардов длинных позиций и $3.15 миллиарда коротких. Проще говоря, Knight спустила 450 миллионов долларов за 45 минут. За 45 минут Knight Capital Group, крупнейший игрок на рынке, стал банкротом.&lt;/p&gt;</summary></entry><entry><title>Швейцарский нож для любого тестировщика</title><link href="http://qa7.ru/blog/2015/09/04/shveitsarskii-nozh-dlia-liubogo-testirovshchika/" rel="alternate"></link><updated>2015-09-04T19:32:19+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-09-04:blog/2015/09/04/shveitsarskii-nozh-dlia-liubogo-testirovshchika/</id><summary type="html">&lt;p&gt;Сегодня я хочу рассказать про самый наверно необходимый инструмент для любого тестировщика да и не только тестировщика,  про то без чего нельзя полноценно работать. Это текстовый редактор, лучший на сегодняшний день и который я нежно люблю. Это не просто текстовый редактор, это полноценная среда разработки, которая в купе с плагинами/расширениями может почти все. Имя ему &lt;a href="http://www.sublimetext.com/3"&gt;Sublime Text&lt;/a&gt;. Он условно бесплатен, требует денег только за регистрацию, незарегистрированная версия иногда и очень ненавязчиво просит заплатить за регистрацию, и эти просьбы настолько ненавязчивые, что совершенно не мешают и не раздражают. Установка его проста как 3 копейки, есть версии для Windows, OS X, Ubuntu, также для windows есть portable version. &lt;/p&gt;
&lt;p&gt;Выглядит он так:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sublime Text 3" src="http://qa7.ru/images/gallery/other/sublime.png" style="width: 2472px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Он может например вот так, буквально за 3 секунды и несколько нажатий клавиш&lt;/p&gt;
&lt;p&gt;&lt;img alt="Пример 1" src="http://qa7.ru/images/gallery/other/first_sublime.gif" style="width: 719px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Или например вот эта киллер фича, так он может не только с json но и с xml:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Пример 2" src="http://qa7.ru/images/gallery/other/second_sublime.gif" style="width: 701px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Собственно редактор интуитивно понятен, очень хорошо кастомизируется. Количество качественных плагинов для него исчисляется сотнями, если не тысячами. &lt;/p&gt;
&lt;p&gt;Главные фичи:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;множественный выбор, с множественным курсором &lt;em&gt;cmd+D (ctrl+D for win/unix)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;юзерфрендли командная строка, которая предугадывает команды&lt;/li&gt;
&lt;li&gt;очень сильная кастомизируемость, настроить и перенастроить можно все, любые шорткаты, темы и т.д.&lt;/li&gt;
&lt;li&gt;раздельное редактирование, можно редактировать один файл и просматривать другой&lt;/li&gt;
&lt;li&gt;куча плагинов, не выходя из редактора можно отправлять http реквесты и тут же видеть ответы, работать с репозиторием контроля версий, поддерживается любая (даже экзотическая) разметка&lt;/li&gt;
&lt;li&gt;в конце концов он красив &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;После установки, если вам не хватает стандартных функций, поставьте &lt;a href="https://packagecontrol.io/installation"&gt;Package Control&lt;/a&gt; он покроет 99% всех ваших потребностей в плагинах, здесь они называются packages. Затем нажимаете &lt;em&gt;cmd+shift+P (ctrl+shift+P for win/unix)&lt;/em&gt; и в командной строке начните набирать package controll и увидите список команд:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Command pallet" src="http://qa7.ru/images/gallery/other/scr1_sublime.png" style="width: 1076px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Тут собственно все понятно, Install Package - установить плагин, Remove - удалить, и т.д.
Вот некоторые плагины которые стоят у меня и которыми я пользуюсь:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://packagecontrol.io/packages/Http%20Requester"&gt;Http Requester&lt;/a&gt; - позволяет отправлять http запросы прямо из редактора, и там же получать ответы&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packagecontrol.io/packages/Terminal"&gt;Terminal&lt;/a&gt; - позволяет запускать терминал в той папке в которой редактируете файл&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packagecontrol.io/packages/Git"&gt;Git&lt;/a&gt; - делает работу с git проще, и опять же не выходя из редактора&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packagecontrol.io/packages/FileDiffs"&gt;FileDiffs&lt;/a&gt; - сравнивает 2 файла, или содержимое буфера c файлом&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Вобщем рекомендую, попробуйте и не пожалеете.&lt;/p&gt;</summary></entry><entry><title>Собеседуемся грамотно</title><link href="http://qa7.ru/blog/2015/08/30/sobeseduemsia-gramotno/" rel="alternate"></link><updated>2015-08-30T11:02:48+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-08-30:blog/2015/08/30/sobeseduemsia-gramotno/</id><summary type="html">&lt;p&gt;Давно хотел скомпилировать некоторые мысли и знания относительно прохождения собеседований, интервью и т.д. Все нижесказанное есть продукт только личного опыта и полученных шишек в процессе множества интервью как на русском так и на английском языках, и на разные позиции.&lt;/p&gt;
&lt;p&gt;Не смотря на то, что в моем послужном списке не так уж и много компаний, я побывал на множестве интервью, как на позицию тестировщика-мануальщика, автоматизатора, тест-лида, менеджера проектов, программиста, и даже пару раз на позицию фронтенд разработчика. Ходить на собеседования нужно я считаю не реже трех-четырех раз в полгода, это позволяет держать себя в тонусе, иметь представление о текущем рынке труда. Оценивать себя и свои возможности адекватно, поверьте мне дорогого стоит. Я подавался на различные вакансии, по принципу интересности вакансии, а не по ее названию и вилке зарплат, критерии же интересности у всех разные. После многих интервью я знаю, что могу претендовать и вполне небезосновательно на разные позиции, не только на QA, но и на разработку, управление проектами и т.д, главное не боятся, что тебя не поймут, и оценивать свои возможности. Я в последние пару лет прохожу собеседования в основном с заграничными работодателями на английском языке поэтому советы тут будут в основном с этой спецификой, хотя они вполне применимы к локальным собеседованиям. &lt;/p&gt;
&lt;h1&gt;Итак начнем с подготовки:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;приведите в соответствие с резюме свой профиль в &lt;a href="https://www.linkedin.com/"&gt;Linkedin&lt;/a&gt;, чтобы места, даты, скилы, используемые технологии совпадали.&lt;/li&gt;
&lt;li&gt;подгоните резюме под конкретную вакансию, необходимые ключевые слова должны быть в нем обязательно упомянуты&lt;/li&gt;
&lt;li&gt;погуглите компанию, возможно у нее есть блог, или отзывы о ней, узнайте как можно больше о компании, ее ценности и т.д, это позволит вам при собеседовании смещать акцент на ваши сильные стороны, которые соответствуют ее ценностям&lt;/li&gt;
&lt;li&gt;как правило при первом же скрининговым интервью с HR, еще до технического собеседования, вас могут спросить о финансовых ожиданиях. Поэтому изучите уровень зарплат в стране, а если вы собеседуетесь с намерением переехать и жить там, то и  уровень жизни. Попытайтесь узнать вилку зарплат, если не получится то называйте подходящую для вас цифру, будте уверены в ней если хотите жить там. &lt;/li&gt;
&lt;li&gt;будьте готовы ответить на вопросы:&lt;blockquote&gt;
&lt;p&gt;Почему наша компания?
Почему уходите с прошлого места?
Как вы решали проблемы с окружающими?
Чем занимались на последнем месте, что использовали?
Что хотели бы изменить на месте работы, если была бы такая возможность?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;я выписывал возможные ответы на вопросы в блокнот и повторял их перед интервью (это очень полезно, особенно если интервью на иностранном языке)&lt;/li&gt;
&lt;li&gt;если у вас есть аккаунт на &lt;a href="https://github.com"&gt;Github&lt;/a&gt; укажите его в резюме, это резко увеличивает шансы отобрать ваше резюме при просмотре техническими специалистами&lt;/li&gt;
&lt;li&gt;если у вас есть проект на &lt;a href="https://github.com"&gt;Github&lt;/a&gt;, будьте готовы поговорить о нем, обсудить сильные и слабые стороны используемых технологий&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Тестовые задания:&lt;/h1&gt;
&lt;p&gt;Я всегда относился к тестовым заданиям серьезно. Это возможность проявить себя и показать с интересной стороны еще до технического интервью. Выделите время, и выполните его как можно лучше, это не только задание но еще и опыт. Выложите его на &lt;a href="https://github.com"&gt;Github&lt;/a&gt;, в будущем в сможете вернуться к нему и обдумать. Важно выполнять его в срок, не затягивайте, это покажет ваше отношение и серьезные намерения.&lt;/p&gt;
&lt;h1&gt;Процесс собеседования:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;собеседование может быть очно, либо по телефону/скайпу, webex&lt;/li&gt;
&lt;li&gt;не опаздывайте, будьте полностью готовы у же за 15 минут до него&lt;/li&gt;
&lt;li&gt;если по скайпу, будьте готовы что попросят включить камеру, и расшарить экран&lt;/li&gt;
&lt;li&gt;могут попросить написать код, в окошке скайпа, в каком-нибудь онлайн редакторе, или в локальном редакторе в случае если экран будет расшарить&lt;/li&gt;
&lt;li&gt;иногда задают алгоритмические или логические задачки, без бумаги и ручки их порой не просто решить&lt;/li&gt;
&lt;li&gt;могут показать какой-нибудь кусок кода и спросить результат выполнения&lt;/li&gt;
&lt;li&gt;часто встречаются вопросы по  SQL (select, join, grup by - это минимум)&lt;/li&gt;
&lt;li&gt;не спорьте на собеседовании. отстаивать свою точку зрения можно, но не сильно усердствуйте в этом, это может показаться не уважительным&lt;/li&gt;
&lt;li&gt;будьте готовы ответить по каждому слову в своем резюме&lt;/li&gt;
&lt;li&gt;как это не смешно, но не пейте много перед интервью, оно может идти и полтора и два часа запросто.&lt;/li&gt;
&lt;li&gt;не переживайте если приходится отвечать на вопросы “не знаю”, это нормально, нельзя знать всего, будет прекрасно если предложите альтернативу&lt;/li&gt;
&lt;li&gt;я всегда записываю имя интервьюера на бумажку, часто в конце собеседования уже не помнишь ничего, а собеседующему приятно, что вы запомнили как его зовут.&lt;/li&gt;
&lt;li&gt;будьте готовы ответить на вопрос о самом сложном проекте на котором вы работали и самой сложной задаче которую вам приходилось решать, и почему решать именно так (это ответ также необходимо выписать в блокнот и повторить перед интервью)&lt;/li&gt;
&lt;li&gt;постоянно подчеркивайте свои сильные стороны, если вы этого не сделаете, собеседующий о них не узнает&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Поиск вакансий&lt;/h1&gt;
&lt;p&gt;Для поиска интересуемых вакансий я пользуюсь различными агрегаторами типа feedly.com. Некоторые сайты предлагают сгенерировать rss с вакансиями по интересуемым ключевым словам, агрегатор их собирает и предоставляет в удобочитаемом виде. Если вакансия интересна я готовлю резюме под нее и подаюсь на нее.&lt;/p&gt;
&lt;p&gt;Пока все, жду ваших комментариев и дополнений. &lt;/p&gt;</summary></entry><entry><title>"Традиционное тестирование скоро умрет!"</title><link href="http://qa7.ru/blog/2015/08/22/traditsionnoe-testirovanie-skoro-umret/" rel="alternate"></link><updated>2015-08-22T17:00:12+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-08-22:blog/2015/08/22/traditsionnoe-testirovanie-skoro-umret/</id><summary type="html">&lt;p&gt;Это моя попытка перевести примечательную статью отсюда: &lt;a href="http://www.agilebuddha.com/agile/traditional-testing-will-be-dead-soon/"&gt;http://www.agilebuddha.com/agile/traditional-testing-will-be-dead-soon/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Соответственно не судите строго :)&lt;/p&gt;
&lt;p&gt;Рутинные задачи в разработке ПО автоматизируются посредством приложений Continuous Delivery и DevOps. Разработчики берут на себя все больше и больше ответственности. Мне стало интересно какова будет роль традиционного тестирования и тестировщиков если посмотреть немного вперед. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Newspapers will die" src="http://qa7.ru/images/gallery/other/newspapers-are-dead.png" style="width: 600px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Этот вопрос беспокоил меня с тех пор как я посмотрел на пирамиду тестирования, концепт придуманный Mike Kohn в его книге  &lt;a href="http://www.amazon.com/Succeeding-Agile-Software-Development-Using/dp/0321579364"&gt;“Succeeding with Agile”&lt;/a&gt;. Ее суть состоит в том, что у вас должно быть 70-80% юнит-тестов, затем 10% интеграционных тестов, затем 5% системных тестов и наконец 5% GUI тестов. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Пирамида тестирования" src="http://qa7.ru/images/gallery/other/testing-triangle.png" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Процентный разброс может различаться. Вся суть в том, что у вас должно быть намного больше низкоуровневых юнит-тестов, чем высокоуровневых тестов через GUI. &lt;/p&gt;
&lt;p&gt;Если вы взгляните на это немного глубже, это становится возможно только если тестировщик так же обладает программистскими навыками. Просмотром исходного кода он сможет понять роль юнит-тестирования в понижении рисков по отношению к end-to-end (неразрывному) тестированию. &lt;/p&gt;
&lt;p&gt;Сейчас команды двигаются по направлению к  Acceptance Test Driven Development (ATDD). Где опять же играет роль программирование.&lt;/p&gt;
&lt;p&gt;Когда бы я ни услышал историю успеха пирамиды тестирования, в ней всегда есть ключевой фактор успеха. Это либо программисты проводили все тестирование, либо тестировщики научились программированию для того чтобы тестировать.&lt;/p&gt;
&lt;p&gt;Люди избавляются от ручной работы как замечено в &lt;a href="http://less.works/less/principles/queueing_theory.html"&gt;LeSS queuing theory&lt;/a&gt;. В процессе они отходят от роли тестировщика полностью. Это становится достаточно распространенным во многих стартапах в эти дни.&lt;/p&gt;
&lt;p&gt;По моему мнению, двигаясь вперед, обе роли обретут возможность к программированию как предпосылку в части развития. Разница будет только в том, что тест-инженеры на первый план поставят тестирование, а разработку на второй. Они будут тратить добрую долю своего времени программируя в форме написания скриптов и кода для автоматизированных сценариев.  &lt;/p&gt;
&lt;p&gt;Тест-инженерам суждено стать продуктовыми экспертами, советниками по качеству и риск аналитиками. &lt;/p&gt;
&lt;p&gt;В заключении:&lt;/p&gt;
&lt;p&gt;Ушли в прошлое те времена, когда ручного тестирования было достаточно, и тестовый цикл мог занять месяцы. Тестерам необходимо стать хорошими программистами для того чтобы двигаться вперед. Просто быть знакомым с программированием уже не достаточно. Они должны быть способны изучать и развивать последние фреймворки автоматизации и работать со скриптовыми технологиями чтобы быть конкурентно способными. &lt;/p&gt;</summary></entry><entry><title>"Об автоматизации тестирования"</title><link href="http://qa7.ru/blog/2015/07/19/ob-avtomatizatsii-testirovaniia/" rel="alternate"></link><updated>2015-07-19T19:36:04+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-07-19:blog/2015/07/19/ob-avtomatizatsii-testirovaniia/</id><summary type="html">&lt;p&gt;Мотивацией для этой статьи послужило одно из рабочих совещаний на котором одной из тем был вопрос о необходимости автоматизированного тестирования. А так же количество мифов вокруг автоматизированного тестирования. &lt;/p&gt;
&lt;h2&gt;Автоматизированное тестирование лучше ручного&lt;/h2&gt;
&lt;p&gt;Ссылаясь на известного &lt;a href="http://www.developsense.com/blog/2009/08/testing-vs-checking/"&gt;гуру&lt;/a&gt; тестирования, повторим: на самом деле автоматизированное тестирование не совсем тестирование. Это всего лишь проверка фактов. Когда у нас есть понимание системы, мы можем привести это понимание к форме проверок, а затем запуская в автоматическом режиме эти проверки, мы подтверждаем наше понимание. Тестирование с одной стороны это исследование трестируемой системы где наша цель добыть новую информацию о ней. 
Для тестирования системы необходим живой человек, чтобы вынести суждение о ее юзабилити например.  Мы можем обнаружить аномалии в системе там, где совсем их не ожидаем. Поэтому нужно быть более лояльным к обоим видам тестирования, чтобы иметь представление о  действительном качестве системы.&lt;/p&gt;
&lt;h2&gt;100% автоматизированное тестирование&lt;/h2&gt;
&lt;p&gt;Так как не существует практического пути достичь 100% тестового покрытия, тоже самое применимо и к автоматизированному тестированию. Мы можем увеличить тестовое покрытие запуском автоматизированных тестов на разных конфигурациях, с большим количеством данных, под разными браузерами и операционными системами, но достичь 100% будет все еще недостижимая цель. Относительно автоматизированных тестов, больше тестов необязательно означает лучшее качество, или больше уверенности. Это все зависит от того как спроектированных тесты. Вместо полного 100% покрытия, лучше сфокусироваться на наиболее важную функциональность, которая критична для бизнеса.&lt;/p&gt;
&lt;h2&gt;Быстрый ROI (окупаемость инвестиций)&lt;/h2&gt;
&lt;p&gt;С этим все вообще сложно. Чтобы реализовать автоматизированное тестирование, необходимо вовлечение в процесс нечто большего чем просто написание тестовых скриптов. По хорошему, тестовый фреймворк должен выполнять действия, которые понятны и полезны бизнесу, такие как выбор тест-кейсов, настройка отчетов, подготовка данных и т.д. Все это требует хороших девелоперских скилов и разработка этого занимает существенно время. Даже если полнофункциональный фреймворк готов и имеет место быть, написание тестовых скриптов и подготовка данных занимает обычно большее время чем прогон ручных тестов. Так или иначе затраты на автоматизированное тестирования окупятся нескоро.&lt;/p&gt;
&lt;h2&gt;Высокий уровень обнаружения дефектов через автоматизированное тестирование&lt;/h2&gt;
&lt;p&gt;Это правда для регрессивного тестирования - когда новые фичи были добавлены в существующую кодовую базу, и необходимо убедится, что существующая функциональность работоспособна, и нам необходима данная информация как можно быстрее. Но правда еще и в том, что количество дефектов найденных в этом случае не такое уж и большое, по сравнению с тем которое обнаруживается при разработке новой функциональности. Другое, о чем приходится сожалеть это, что автоматизированные скрипты проверяют только то, что написаны проверять тем человеком который их написал. Быстро прогнав автоматизированные тесты мы обнаруживаем в себе фальшивую уверенность в качестве продукта. Автоматизированные тесты смогут подтвердить наличие дефектов, но не смогут доказать их отсутствие.&lt;/p&gt;
&lt;p&gt;Далее приходят на ум другие мифы об автоматизации, такие как - “Нам нужны только юнит-тесты” или “Нам нужны только UI тесты” и т.д. Но мне, если често, уже лень, развею их как нибудь в другой раз.&lt;/p&gt;
&lt;p&gt;В заключении хочу сказать, что автоматизированное тестирование это долгосрочная инвестиция. Оно занимает кучу времени и требует серьезную экспертизу в разработке фреймворка и его поддержке. А так же в написании самих тестовых скриптов. Это не единичное усилие, которое сделал и забыл, а оно там само по себе крутится. Оно  требует постоянного надзора и обновления. И вместо того чтобы пытаться заменить автоматизированным тестированием ручных тестировщиков или ожидать, что автоматизированные тесты найдут много дефектов, лучше сфокусироваться на такой цели как снижение монотонной ручной работы по тестированию, и подготовке тестовых данных. Это несомненно позволит переключится тестировщикам на исследовательское тестирование, что увеличит шансы обнаружения дефектов. Понимание ограничений и установка реальных ожиданий очень важны для преодоления этих мифов автоматизированного тестирования.&lt;/p&gt;</summary></entry><entry><title>"Headless webdriver тесты на python"</title><link href="http://qa7.ru/blog/2015/04/28/headless-webdriver-testy-na-python/" rel="alternate"></link><updated>2015-04-28T19:36:04+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-04-28:blog/2015/04/28/headless-webdriver-testy-na-python/</id><summary type="html">&lt;p&gt;Небольшая полезняшка тем кто пишет тесты на python и вынужден запускать их headless.&lt;/p&gt;
&lt;p&gt;Для запуска тестов нам понадобится &lt;code&gt;Xvfb&lt;/code&gt;. &lt;code&gt;Xvfb&lt;/code&gt; &lt;a href="http://en.wikipedia.org/wiki/Xvfb"&gt;это&lt;/a&gt; виртуальный Х-сервер который для вывода использует не видеокарту, а оперативную память, так что браузер разницы не заметит.&lt;/p&gt;
&lt;p&gt;И еще нам понадобится python библиотека &lt;code&gt;pyvirtualdisplay&lt;/code&gt;, подробнее о ней &lt;a href="https://pypi.python.org/pypi/PyVirtualDisplay"&gt;тут&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;устанавливаем &lt;code&gt;Xvfb&lt;/code&gt;:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install xvfb
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;устанавливаем &lt;code&gt;pyvirtualdisplay&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo pip install pyvirtualdisplay
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;обратите внимание &lt;code&gt;pyvirtualdisplay&lt;/code&gt; необходимо устанавливать с правами &lt;code&gt;root&lt;/code&gt;, иначе не заработает&lt;/p&gt;
&lt;p&gt;и собственно тест:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyvirtualdisplay&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Display&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;  
&lt;span class="sd"&gt;"""visible=0, visible=1 for display or not virual display"""&lt;/span&gt;  
&lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visible&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chrome&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'http://qa7.ru'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;'The title of current page is: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;  
&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Теперь можно, гонять тесты, снимать скриншоты и т.д.&lt;/p&gt;</summary></entry><entry><title>"Вопросы на интервью. Как перевернуть массив? "</title><link href="http://qa7.ru/blog/2015/03/29/voprosy-na-interviu-kak-perevernut-massiv/" rel="alternate"></link><updated>2015-03-29T09:38:04+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-03-29:blog/2015/03/29/voprosy-na-interviu-kak-perevernut-massiv/</id><summary type="html">&lt;p&gt;Один из популярнейших вопросов на интервью для java-девелопера  это просьба перевернуть массив. Это очень похоже на вопрос из прошлой статьи, про переворачивание &lt;a href="/blog/2014/07/07/voprosy-po-java-na-interviu-2/"&gt;строки&lt;/a&gt;, но немного про другое.  Вопрос не выглядит сложным, все что нужно сделать это создать новый массив такого же размера, перебрать исходный массив от конца до нажала заполняя новый. Все, готово. Но нет, мы же создали дополнительный массив того же размера, что и исходный, что усложняет наше решение &lt;code&gt;O(n).&lt;/code&gt; Мы не сможем использовать наше решение, если размер массива очень большой (например 10 млн элементов), а размер heap небольшой. Что мы можем тут сделать? Как улучшить наше решение? Можем ли мы перевернуть массив не создавая дополнительный буффер? Для нашей задачи предположим, что у нас массив из &lt;code&gt;integer&lt;/code&gt; (вообще на интервью хорошая практика задавать правильные вопросы в правильных местах, как говорят знающие люди это черта хорошего программиста). Ключевое тут понять, что вам нужно перевернуть исходный массив, мы не можем использовать другой массив, но использовать одну две дополнительные переменные, вполне допустимо. Так же недопустимо использование сторонних библиотек или &lt;code&gt;Java API&lt;/code&gt; которые могут сделать эту работу за нас, а также методов класса &lt;code&gt;java.util.Arrays&lt;/code&gt;, за исключением &lt;code&gt;Arrays.toString()&lt;/code&gt; чтобы выводить массивы. Когда наши требования выяснены приступим к решению задачи. &lt;/p&gt;
&lt;p&gt;Первое что приходит в голову это перебрать все элементы массива и поменять их местами. Первый элемент и последний, второй элемент с предпоследним, и т.д. В этом случае все элементы массивы будут перевернуты без использования дополнительного буффера. Ключевая вещь здесь, которую нужно держать в голове это только что нам нужно менять местами элементы до того момента как мы достигнем середины массива, иначе мы получим тот же самый массив. Возникает закономерный вопрос, а что если массив имеет четное количество элементов? В этом случае в середине массива будут два элемента, и нам нужно поменять их местами, поэтому наше условие перебора будет содержать выражение &lt;code&gt;index &amp;lt;= middle&lt;/code&gt; а не &lt;code&gt;index &amp;lt; middle&lt;/code&gt;. Середина тут ничто иное как &lt;code&gt;length/2&lt;/code&gt;. Помните что мы будем использовать     оператор &lt;code&gt;/&lt;/code&gt; что означает в случае если &lt;code&gt;length&lt;/code&gt; равно 8, вернет нам 4, а в случае если &lt;code&gt;length&lt;/code&gt; равно 7, вернет нам 3. Так что в случае четного количества элементов средние элементы поменяются местами, а в случае нечетного средний элемент останется на месте. &lt;/p&gt;
&lt;p&gt;Как говорится, лучше один раз увидеть, чем 100 раз прочитать.
&lt;img alt="Array" src="http://qa7.ru/images/gallery/other/Reverse_Array_in_Place_in_Java.png" style="width: 734px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Ниже пример моей программы, которая переворачивает массив в один проход, так же неплохо будет посмотреть на юнит тесты к этому коду далее для лучшего понимания.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Java Program to demonstrate how to reverse an array in place.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArrayReversalDemo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;     * reverse the given array in place * @param input&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"original array : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="c1"&gt;// handling null, empty and one element array&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="c1"&gt;// swap numbers&lt;/span&gt;
            &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"reversed array : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;original array:[1,2,3,4,5,6,7]
reversed array:[7,6,5,4,3,2,1]
original array:[]
original array:null
original array:[1,2,3,4,5,6]
reversed array:[6,5,4,3,2,1]
original array:[1]
reversed array:[1]
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Ниже мой набор JUnit тестов для нашего &lt;code&gt;reverse(int[] input)&lt;/code&gt; метода. Наши тесты должны покрывать случаи, когда массив пустой, когда вместо массива &lt;code&gt;null&lt;/code&gt;, массив содержит один элемент, массив имеет четное и нечетное количество элементов.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.junit.Test&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;static&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;junit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Assert&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;assertArrayEquals&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArrayReversalDemoTest&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testReverseWithEvenLengthOfArray&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;ArrayReversalDemo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertArrayEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]{&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testReverseWithOddLengthOfArray&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;ArrayReversalDemo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertArrayEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]{&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testReverseWithEmptyArray&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
        &lt;span class="n"&gt;ArrayReversalDemo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertArrayEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]{},&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testReverseWithNullArray&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;ArrayReversalDemo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertArrayEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testReverseWithJustOneElementArray&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;ArrayReversalDemo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;assertArrayEquals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Пока все. Продолжение следует...&lt;/p&gt;</summary></entry><entry><title>"Docker продолжение"</title><link href="http://qa7.ru/blog/2015/02/23/docker-prodolzhenie/" rel="alternate"></link><updated>2015-02-23T11:38:04+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-02-23:blog/2015/02/23/docker-prodolzhenie/</id><summary type="html">&lt;p&gt;Категорически всех приветствую. Некоторое время назад я начал рассказывать про &lt;a href="http://qa7.ru/blog/2014/11/08/docker-bystryi-start/"&gt;Docker&lt;/a&gt;. Так как та статья покрывала только подъем контейнера, сегодня я расскажу как поднять два контейнера (с приложением и БД) и связать их вместе.&lt;/p&gt;
&lt;p&gt;Для начала создадим контейнер с простым приложением написанном на python с помощью flask+jinja2 это будет простая веб форма которая будет складывать некоторые данные в БД.&lt;/p&gt;
&lt;p&gt;создадим файл &lt;code&gt;Dockerfile&lt;/code&gt; со следующим содержимым:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;############################################################
# Dockerfile to build Python WSGI Application Containers
# Based on Ubuntu
############################################################

# Set the base image to Ubuntu
FROM ubuntu

# File Author / Maintainer
MAINTAINER MaintanerName
# Add the application resources URL
RUN echo "deb http://archive.ubuntu.com/ubuntu/ $(lsb_release -sc) main universe" &amp;gt;&amp;gt; /etc/apt/sources.list

# Update the sources list
RUN apt-get update

# Install basic applications
RUN apt-get install -y tar git curl nano wget dialog net-tools build-essential

# Install Python and dependencies
RUN apt-get install -y python python-dev python-distribute python-pip libmysqlclient-dev mysql-client

# Copy the application folder inside the container
ADD my_application /my_application
ADD db /my_application

# Expose ports
EXPOSE 5000

# Set the default directory where CMD will execute
WORKDIR /my_application

# Get pip to download and install requirements:
RUN pip install -r requirements.txt



# Set the default command to execute    
# when creating a new container
# i.e. using CherryPy to serve the application
CMD python app.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Этот файл является исходным для создания контейнера, в нем описаны все действия которые должны быть выполнены до того момента как он запустится. Некоторые команды в нем требуют пояснения:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;FROM - директива которая указывает из какого исходного образа будет собран контейнер, в нашем случае это ubuntu. Так же при желании можно указать метку образа,это например необходимо если вас интересует не последняя версия ubuntu, а какая-то определенная. В этом случае эта срока будет выглядеть так &lt;code&gt;FROM ubuntu:12.04&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MAINTAINER - это как можно догадаться имя того кто поддерживает данный образ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;RUN - важная директива, которая позволяет запускать различные команды операционной системы, например если вам необходимо что-то скопировать внутри образа, создать файловую структуру или установить необходимые программы.&lt;/li&gt;
&lt;li&gt;ADD - директива которая копирует файлы, папки в файловую систему контейнера, формат у нее следующий &lt;code&gt;ADD &amp;lt;src&amp;gt;... &amp;lt;dest&amp;gt;&lt;/code&gt; где &lt;src&gt; - путь к исходным файлам/папкам(должны быть относительными к директории с файлом &lt;code&gt;Dockerfile&lt;/code&gt;), &lt;dest&gt; - конечный путь, должен быть абсолютным внутри контейнера &lt;/dest&gt;&lt;/src&gt;&lt;/li&gt;
&lt;li&gt;EXPOSE - информирует Docker, что контейнер будет слушать определенный порт в процессе работы&lt;/li&gt;
&lt;li&gt;WORKDIR - устанавливает рабочую директорию для команд &lt;code&gt;RUN&lt;/code&gt;, &lt;code&gt;CMD&lt;/code&gt;, &lt;code&gt;ADD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CMD - по сути инструкция по умолчанию для контейнера, которая запустится после старта контейнер. Эта инструкция может быть только одна. Если их несколько то запустится только последняя.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Далее создадим следующую файловую структуру для нашего приложения:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;/working_dir
    |
    |- /my_application
        |
        |- requirements.txt  
        |- /templates
            |- index.html        
        |- app.py            
    |- /db
        |- init_db.sh
        |- dump.sql
    |- Dockerfile
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;файл &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;flask
flask-mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;файл &lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Webpage&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"navigation"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"/add"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;fieldset&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"firstname"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Firstname&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"firstname"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"firstname"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"lastname"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lastname&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"firstname"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"lastname"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;файл &lt;code&gt;app.py&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url_for&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flaskext.mysql&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MYSQL_DATABASE_USER'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'root'&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MYSQL_DATABASE_DB'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'mydb'&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MYSQL_DATABASE_HOST'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MYSQL_PORT_3306_TCP_ADDR'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SELECT * from guests"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/add"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"INSERT INTO guests VALUES (null, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;)"&lt;/span&gt;
    &lt;span class="n"&gt;firstname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'firstname'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;lastname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'lastname'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url_for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'0.0.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Далее нам необходимы скрипты для подготовки БД, их нужно будет выполнить уже на запущенных контейнерах
файл &lt;code&gt;init_db.sh&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
sleep 5
mysql -u root -h &lt;span class="nv"&gt;$MYSQL_PORT_3306_TCP_ADDR&lt;/span&gt; -e &lt;span class="s2"&gt;"CREATE DATABASE IF NOT EXISTS mydb"&lt;/span&gt;
mysql -u root -h &lt;span class="nv"&gt;$MYSQL_PORT_3306_TCP_ADDR&lt;/span&gt; mydb &amp;lt; dump.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;файл &lt;code&gt;dump.sql&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;IF&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;guests&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;guests&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;unsigned&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="n"&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;firstname&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;lastname&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ENGINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;InnoDB&lt;/span&gt; &lt;span class="n"&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;CHARSET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;utf8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;LOCK&lt;/span&gt; &lt;span class="n"&gt;TABLES&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;guests&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;WRITE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;guests&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Tom'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Soyer'&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'John'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Dow'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;UNLOCK&lt;/span&gt; &lt;span class="n"&gt;TABLES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;После того как мы подготовили все необходимое, запускаем контейнер с mysql как описано &lt;a href="http://qa7.ru/blog/2014/11/08/docker-bystryi-start/"&gt;в этой статье&lt;/a&gt;. Контейнер с mysql должен также иметь имя mysql.
Находясь в папке с файлом &lt;code&gt;Dockerfile&lt;/code&gt; соберем образ контейнера из этого файла, который назовем &lt;code&gt;my_app&lt;/code&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;docker build -t "my_app" .
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;после того как контейнер сбилдится запустим его и слинкуем с контейнером mysql следующей командой:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;docker run -d --name web -p 5000:5000 --link mysql:mysql my_app
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;собственно ради этой строчки мы и городили весь огород, давайте рассмотрим ее по подробнее
параметр &lt;code&gt;--link mysql:mysql&lt;/code&gt; говорит какой контейнер связать с контейнером из образа my_app под алиасом &lt;code&gt;mysql&lt;/code&gt;
параметр &lt;code&gt;-p 5000:5000&lt;/code&gt; говорит какой порт нашего контейнера с приложение пробросить на порт 5000, чтоб оно стало доступно снаружи
параметр &lt;code&gt;--name web&lt;/code&gt; задает имя контейнеру &lt;/p&gt;
&lt;p&gt;запустив команду &lt;code&gt;docker ps&lt;/code&gt; мы должны увидить примерно следующее:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;CONTAINER ID        IMAGE                     COMMAND                CREATED             STATUS              PORTS                    NAMES
a16ad5d110c9        my_app:latest             "/bin/sh -c 'python    2 hours ago         Up About an hour    0.0.0.0:5000-&amp;gt;5000/tcp   web                 
391cc197ab20        dockerfile/mysql:latest   "mysqld_safe"          3 months ago        Up About an hour    0.0.0.0:3306-&amp;gt;3306/tcp   mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Пока еще наше приложение не работает, так в БД нет необходимых данных. Сейчас мы попробуем создать их подключившись к работающему контейнеру и выполнив скрипт из него. Для этого выполните следующую команду: &lt;code&gt;docker exec -ti web bash&lt;/code&gt; вы окажитесь в запущенном контейнере в папке /my_application. Выполните &lt;code&gt;bash init_db.sh&lt;/code&gt;. Все, после этого наше приложение готово.&lt;/p&gt;
&lt;p&gt;Пройдя по ip вы увидите наше приложение которое позволяет добавлять новые записи в БД и считывать их&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;Как узнать IP&lt;/h3&gt;
&lt;p&gt;Ip на котором доступно приложение, если у вас Mac или Windows можно получить командой &lt;code&gt;boot2docker ip&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;на этом пока все&lt;/p&gt;</summary></entry><entry><title>"Обновление сайта"</title><link href="http://qa7.ru/blog/2015/01/19/obnovlenie-saita/" rel="alternate"></link><updated>2015-01-19T19:47:45+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-01-19:blog/2015/01/19/obnovlenie-saita/</id><summary type="html">&lt;p&gt;Как многие заметили, изменился дизайн сайта да и сам движок генерации сайта. Я решил слезть с того, что не очень понимаю, не смотря на то что оно вроде работало и не плохо. Я говорю о движке Octopress который я заменил на питонячий Pelican. Некоторые статьи теперь недоступны по старым ссылкам, так как Pelican генерирует их по своему. Но в целом остается все как есть. Прошу прощения за неудобства, в ближайшем будущем переездов на другие движки не планируется.&lt;/p&gt;</summary></entry><entry><title>Фотки из Варшавы</title><link href="http://qa7.ru/blog/2015/01/10/fotki-iz-varshavy/" rel="alternate"></link><updated>2015-01-10T00:00:00+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2015-01-10:blog/2015/01/10/fotki-iz-varshavy/</id><summary type="html">&lt;p&gt;Прошу прощения, запоздавшие фотки из Варшавы в мае месяце 2014 года. Надеюсь через некоторое время я расскажу вам, что я там делал. А пока просто фотографии. Красивый город, мне понравился.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img002.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img003.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img006.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img007.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img008.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img009.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img010.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img011.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img012.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img013.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img014.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img015.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img017.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img018.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img019.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img020.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img021.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img022.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img023.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img024.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img025.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img026.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img027.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img028.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img029.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img030.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img031.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img032.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img033.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img034.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img035.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img036.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img037.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img038.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img039.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img040.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img041.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img043.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img044.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img045.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img046.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img047.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img048.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Warsaw" src="http://qa7.ru/images/gallery/warsaw/img049.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;</summary></entry><entry><title>"Как установить разные Java JDK в Ubuntu с помощью Apt-Get"</title><link href="http://qa7.ru/blog/2014/12/21/kak-ustanovit-raznye-java-jdk-v-ubuntu-s-pomoshchiu-apt-get/" rel="alternate"></link><updated>2014-12-21T10:54:45+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-12-21:blog/2014/12/21/kak-ustanovit-raznye-java-jdk-v-ubuntu-s-pomoshchiu-apt-get/</id><summary type="html">&lt;h4&gt;Введение&lt;/h4&gt;
&lt;p&gt;Множество других статей и программ требует установленной Java. В этой статье мы осветим процесс установки и управления различными версиями Java.&lt;/p&gt;
&lt;h3&gt;Установка JRE/JDK в конфигурации по-умолчанию&lt;/h3&gt;
&lt;p&gt;Это рекомендуемый и наиболее простой вариант. В Ubuntu 12.04 и более ранних версиях Ubuntu будет установлен &lt;code&gt;OpenJDK 6&lt;/code&gt;. В &lt;code&gt;Ubuntu 12.10&lt;/code&gt; и более поздних версиях Ubuntu будет установлен OpenJDK 7.&lt;/p&gt;
&lt;p&gt;Установка Java с помощью &lt;code&gt;apt-get&lt;/code&gt; очень проста. Сначала обновим список пакетов:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Затем проверим, не установлена ли уже Java:
&lt;!--more--&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;java -version
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Если в результате выполнения этой команды возвращается результат &lt;code&gt;"The program java can be found in the following packages"&lt;/code&gt;, Java еще не установлена, поэтому далее выполним команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install default-jre
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;В результате выполнения этой команды будет установлена Java Runtime Environment (JRE). Если вместо этого вам необходим &lt;code&gt;Java Development Kit (JDK)&lt;/code&gt;, который обычно требуется для компиляции Java-приложений (например, &lt;code&gt;Apache Ant&lt;/code&gt;, &lt;code&gt;Apache Maven&lt;/code&gt;, &lt;code&gt;Eclipse&lt;/code&gt; and &lt;code&gt;IntelliJ IDEA&lt;/code&gt;) выполните следующую команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install default-jdk
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Вот и все, что нужно сделать для того, чтобы установить Java.&lt;/p&gt;
&lt;p&gt;Все последующие шаги являются необязательными и должны осуществляться только тогда, когда это действительно необходимо.&lt;/p&gt;
&lt;h3&gt;Установка OpenJDK 7 (опционально)&lt;/h3&gt;
&lt;p&gt;Для установки OpenJDK 7, выполните следующую команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install openjdk-7-jre
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;В результате выполнения этой команды будет установлена &lt;code&gt;Java Runtime Environment (JRE)&lt;/code&gt;. Если вместо этого вам необходим Java Development Kit (JDK), выполните следующую команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install openjdk-7-jdk
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3&gt;Установка Oracle JDK (опционально)&lt;/h3&gt;
&lt;p&gt;Oracle JDK является официальным JDK. Тем не менее, с некоторых пор компания Oracle не поддерживает его в качестве варианта для установки по-умолчанию в Ubuntu.&lt;/p&gt;
&lt;p&gt;Тем не менее, вы можете установить его с помощью &lt;code&gt;apt-get&lt;/code&gt;. Для установки любой версии сперва выполните следующие команды:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install python-software-properties
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Далее, в зависимости от того, какую конкретно версию вы хотите установить, выполните одну из следующих команд:&lt;/p&gt;
&lt;h4&gt;Oracle JDK 6&lt;/h4&gt;
&lt;p&gt;Это не самая новая версия, но она все еще используется.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install oracle-java6-installer
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h4&gt;Oracle JDK 7&lt;/h4&gt;
&lt;p&gt;Это последняя стабильная версия.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install oracle-java7-installer
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h4&gt;Oracle JDK 8&lt;/h4&gt;
&lt;p&gt;Это версия находится в состоянии developer preview, ее релиз запланирован на март 2014 года. Эта статья о Java 8 поможет вам разобраться с этой версией.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo apt-get install oracle-java8-installer
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Управление версиями Java (опционально)
Если на вашем сервере (Droplet) установлено несколько версий Java, можно задать, какая именно версия будет использоваться по-умолчанию. Для этого выполните команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo update-alternatives --config java
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Результатом этой команды для двух установленных версий Java будет что-то похожее на это:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;There are 2 choices for the alternative java (providing /usr/bin/java).

Selection    Path                                            Priority   Status
------------------------------------------------------------
* 0            /usr/lib/jvm/java-7-oracle/jre/bin/java          1062      auto mode
  1            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      manual mode
  2            /usr/lib/jvm/java-7-oracle/jre/bin/java          1062      manual mode

Press enter to keep the current choice[*], or type selection number:
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Вы можете выбрать номер версии Java, которая будет использоваться по-умолчанию. То же самое можно сделать для компилятора Java (javac):&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo update-alternatives --config javac
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;В результате выполнения этой команды будет отображет вывод, аналогичный выводу от выполнения предыдущей команды. Выбор компилятора, используемого по-умолчаню можно сделать точно так же: указав необходимую цифру. Эта же команда может использоваться и для других команд, например, &lt;code&gt;keytool&lt;/code&gt;, &lt;code&gt;javadoc&lt;/code&gt; и &lt;code&gt;jarsigner&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Установка переменной окружения &lt;code&gt;JAVA_HOME&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Для установки переменной окружения &lt;code&gt;JAVA_HOME&lt;/code&gt;, которая необходима для работы некоторых программ, прежде всего необходимо понять, куда конкретно была установлена Java:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo update-alternatives --config java
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;В результете выполнения этой команды мы получим нечто, похожее по виду на это:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;There are 2 choices for the alternative java (providing /usr/bin/java).

Selection    Path                                            Priority   Status
------------------------------------------------------------
* 0            /usr/lib/jvm/java-7-oracle/jre/bin/java          1062      auto mode
  1            /usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java   1061      manual mode
  2            /usr/lib/jvm/java-7-oracle/jre/bin/java          1062      manual mode

Press enter to keep the current choice[*], or type selection number:
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Полный путь для каждой из установленных версий Java в нашем примере будет таким:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;/usr/lib/jvm/java-7-oracle
/usr/lib/jvm/java-6-openjdk-amd64
/usr/lib/jvm/java-7-oracle
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Скопируйте путь нужной вам версии Java и добавьте его в файл &lt;code&gt;/etc/environment&lt;/code&gt;:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;sudo nano /etc/environment
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;В этом файле добавьте следующую строчку (заменив YOUR_PATH на только что скопированный путь):&lt;/p&gt;
&lt;p&gt;'JAVA_HOME="YOUR_PATH"''
Это изменит переменную окружения. Теперь перезагрузим этот файл:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;source /etc/environment
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Проверим результат выполнив команду:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="x"&gt;echo &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Если в результате будет отображен заданный вами путь установки нужной вам версии Java, то переменная окружения была задана успешно. Если нет, пожалуйста, убедитесь, что вы в точности следовали всем предшествующим шагам.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Эта статья честно скопирована &lt;a href="https://www.digitalocean.com/community/tutorials/java-ubuntu-apt-get-ru"&gt;отсюда&lt;/a&gt;.&lt;/em&gt; 
Спасибо за внимание :)&lt;/p&gt;</summary></entry><entry><title>"Docker быстрый старт"</title><link href="http://qa7.ru/blog/2014/11/08/docker-bystryi-start/" rel="alternate"></link><updated>2014-11-08T21:34:19+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-11-08:blog/2014/11/08/docker-bystryi-start/</id><summary type="html">&lt;p&gt;Сегодня я хотел рассказать как пользоваться докером. Установка его вполне тривиальна и подробно расписана &lt;a href="https://docs.docker.com/installation/"&gt;тут&lt;/a&gt;. Выбираете ОС, жмакаете и дальше действуйте по инструкции.&lt;/p&gt;
&lt;p&gt;Попробуем для начала запустить контейнер с mysql. Чтобы получить образ контейнера  можно воспользоваться 2 путями:
&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;скачать его из репозитория явно, командой &lt;code&gt;docker pull &amp;lt;image_name&amp;gt;'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;либо запустить контейнер командой &lt;code&gt;docker run […] &amp;lt;image_name&amp;gt; […]&lt;/code&gt; в этом случае образ контейнера скачается из репозитория перед запуском&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Из вышесказанного очевидно что образы контейнеров хранятся в общем репозитории. А именно здесь &lt;a href="https://registry.hub.docker.com/"&gt;https://registry.hub.docker.com/&lt;/a&gt;. В этом хранилище вы можете иметь сколько угодно публичных образов и только один приватный. Хотите больше приватных, платите денюжку. Для нашего примера мы возьмем готовый образ любезно подготовленный разработчиками &lt;code&gt;Docker&lt;/code&gt; с названием &lt;code&gt;dockerfile/mysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Запускаем следующую команду:
&lt;code&gt;docker run -d --name mysql -p 3306:3306 dockerfile/mysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;в ответ вы получите нечто вроде:
&lt;code&gt;9452a8c5ac34665262a8f9031399e2d0afefdbbc4282f8ad60ecffbf0860b9a0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;это хэш запущенного контейнера. Чуть позже объясню что же такое мы запустили&lt;/p&gt;
&lt;p&gt;запускаем:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker ps -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;в ответ видим: &lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;CONTAINER ID        IMAGE                     COMMAND             CREATED             STATUS              PORTS                    NAMES
9452a8c5ac34        dockerfile/mysql:latest   "mysqld_safe"       14 seconds ago      Up 13 seconds       0.0.0.0:3306-&amp;gt;3306/tcp   mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;тут все понятно. Команда ps выводит список работающих контейнеров, а флаг &lt;code&gt;-l&lt;/code&gt; предписывает вывести информацию только о последнем запущенном контейнере.  В столбце COMMAND это та команда которая выполняется в контейнере по умолчанию. Столбец PORTS показывает на каком порте и хосте  доступен процесс бегущий в контейнере, в нашем случае это процесс &lt;code&gt;mysqld_safe&lt;/code&gt; на хосте &lt;code&gt;0.0.0.0&lt;/code&gt; порт &lt;code&gt;3306&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Тут есть нюансы, если вы к примеру воспользовались приложением &lt;code&gt;boot2docker&lt;/code&gt; для установки docker на вашу ОС (windows, mac и т.д) то локальным хостом в нашем случае будет не &lt;code&gt;0.0.0.0&lt;/code&gt; а тот который выделен для &lt;code&gt;boot2docker&lt;/code&gt;. Узнать IP по которому будет доступен наш контейнер можно в этом случае командой &lt;code&gt;boot2docker ip&lt;/code&gt;. Соответственно в нашем случае подключиться к mysql можно будет по &lt;code&gt;&amp;lt;boot2docker ip&amp;gt;:3306&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Теперь разберем команду : &lt;code&gt;docker run -d --name mysql -p 3306:3306 dockerfile/mysql&lt;/code&gt;. Команда &lt;code&gt;run&lt;/code&gt; запускает контейнер, флаг &lt;code&gt;-d&lt;/code&gt;говорит что контейнер должен работать в режиме detached, т.е в бекграунде. Далее флагом &lt;code&gt;—name&lt;/code&gt; мы присваиваем имя контейнеру, если мы это не сделаем, это сделает за нас &lt;code&gt;docker&lt;/code&gt; (имена он присваивает порой забавные). Далее флаг &lt;code&gt;-p&lt;/code&gt;  говорит опубликовать на ip  по умолчанию (0.0.0.0) хоста (там откуда вы запускаете docker) на порту &lt;code&gt;3306&lt;/code&gt;  опубликовать то что происходит на порту контейнера &lt;code&gt;3306&lt;/code&gt;. Формат для флага &lt;code&gt;-p&lt;/code&gt; следующий &lt;code&gt;ip:hostPort:containerPort&lt;/code&gt; либо  &lt;code&gt;ip::containerPort&lt;/code&gt; либо &lt;code&gt;hostPort:containerPort&lt;/code&gt; либо &lt;code&gt;containerPort&lt;/code&gt;. Список всех флагов команды &lt;code&gt;run&lt;/code&gt; и их краткое описание можно получить запустив &lt;code&gt;docker run --help&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;Собственно все, контейнер работает к нему можно подключится, и использовать как базу данных. Чтобы остановить контейнер нужно воспользоваться командой &lt;code&gt;docker stop mysql&lt;/code&gt; чтоб удалить контейнер нужно запустить &lt;code&gt;docker rm mysql&lt;/code&gt;. Как создать свой образ контейнера залить его в репозиторий и слинковать его с нашим контейнером с базой данных, я расскажу в следующий раз.&lt;/p&gt;</summary></entry><entry><title>"Docker?"</title><link href="http://qa7.ru/blog/2014/11/04/docker/" rel="alternate"></link><updated>2014-11-04T10:23:12+03:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-11-04:blog/2014/11/04/docker/</id><summary type="html">&lt;p&gt;Создатели &lt;code&gt;Docker&lt;/code&gt; любят приводить следующую аналогию: До 1960х крупные грузоперевозчики имели большую головную боль при разгрузке, погрузке, сортировке грузов. Нельзя же положить на мешки с бананами автомобили. Больше 50% времени занимали именно процессы связанные с манипуляциями грузов на промежуточных остановках. Это продолжалось до тех пор, пока не стали использовать стандартные контейнеры. Теперь стало абсолютно по барабану, что внутри контейнера, бананы или кузнечные наковальни.
&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Что-то похожее испытывали разработчики при деплое своих приложений на сервера, до тех пор пока не появился &lt;code&gt;Docker&lt;/code&gt;. Теперь разработчики могут упаковать свои приложения в контейнеры со своими окружениями и передать эти контейнеры сисадминам которым в свою очередь не составит большого труда их установить на сервера.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4&gt;Какие проблемы решает &lt;code&gt;Docker&lt;/code&gt;:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Автоматизация упаковки и развертывания приложений&lt;/li&gt;
&lt;li&gt;Создание собственных легковесных PaaS окружений&lt;/li&gt;
&lt;li&gt;Автоматизация тестирования и непрерывной интеграции/развертывания&lt;/li&gt;
&lt;li&gt;Развертывание и масштабирование веб-приложений, баз данных и сервисов бекенда&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Собственно для автоматизация тестирования и непрерывной интеграции/развертывания я затеял изучить &lt;code&gt;Docker&lt;/code&gt;. На работе часто приходится настраивать среды автоматизированного тестирования на чистых серверах. К примеру полная настройка одного сервера до рабочего состояния съест как минимум полдня, а порой и целый день. &lt;code&gt;Docker&lt;/code&gt; должен мне позволить автоматизировать этот процесс, уменьшить время на развертку. Это основная причина почему я посмотрел в эту сторону. Большинство информации по Docker доступно на его официальном &lt;a href="https://www.docker.com/"&gt;сайте&lt;/a&gt;. О том что и как у меня получилось буду держать вас в курсе друзья.&lt;/p&gt;
&lt;p&gt;P.S.
Если кто-то уже пользовался этой технологией для схожих целей, дайте знать. &lt;/p&gt;</summary></entry><entry><title>"Ожидания в WebDriver"</title><link href="http://qa7.ru/blog/2014/09/21/ozhidaniia-v-webdriver/" rel="alternate"></link><updated>2014-09-21T13:49:08+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-09-21:blog/2014/09/21/ozhidaniia-v-webdriver/</id><summary type="html">&lt;hr/&gt;
&lt;p&gt;Механизм ожидания страниц в WebDriver реализован следующим образом. WebDriver работает с DOM, поэтому он ждет пока &lt;code&gt;document.readyState == complete&lt;/code&gt;, это поведение справедливо для следующих действий:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;driver.get()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;driver.navigate.refresh()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;переход на другие страницы посредством взаимодействия с различными элементами страницы&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;существует опция &lt;code&gt;pageLoadTimeout&lt;/code&gt; которая позволяет прекратить ожидание и остановить загрузку страницы, имейте в виду в случае если DOM к этому моменту не прогрузится вы получите &lt;em&gt;TimeoutException&lt;/em&gt;
&lt;!--more--&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;timeouts&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;pageLoadTimeout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TimeUnit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SECONDS&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;помимо этого существуют следующие виды ожиданий: &lt;/p&gt;
&lt;h3&gt;Неявные (Implicit) ожидания&lt;/h3&gt;
&lt;p&gt;Это глобальные ожидания задаются один раз на всю сессию, смысл этого заключается в том что &lt;code&gt;driver.findElement()&lt;/code&gt; будет выполнятся до тех пор пока элемент не будет найден, либо пока не пройдет отведенное время ожидание. Задается следующим образом:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;timeouts&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;implicitlyWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TimeUnit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SECONDS&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3&gt;Явные (Explicit) ожидания&lt;/h3&gt;
&lt;p&gt;Когда необходимо подождать что-либо определенное, на помощь приходят явные ожидания. Которые могут реализоваться несколькими способами. Объектом &lt;code&gt;WebDriverWait&lt;/code&gt; &lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Wait&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;где второй параметр время ожидания в секундах, а третий время в милисекундах которое нужно ожидать перед очередным вызовом проверки наличия элемента(по дефолту 500). Если необходимо вывести сообщение в случае неуспешного завершения ожидания, то код может быть следующим:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Wait&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;withMessage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Element was not found"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Во время процесса поиска WebDriver регулярно опрашивает браузер на наличие элемента в DOM модели. При этом существует ряд исключительных ситуаций:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Если элемент доступен в DOM на момент поиска, но спустя время, в момент его вызова, DOM может измениться. Тогда мы получим StaleElementReferenceException.&lt;/li&gt;
&lt;li&gt;Если элемент отсутствует в DOM на момент вызова – получим &lt;code&gt;NoSuchElementException&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Если элемент был найдем в DOM, но не видим на странице – получим &lt;code&gt;ElementNotVisibleException&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Если элемент изменил координаты – получим &lt;code&gt;MoveTargetOutOfBoundsException&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;когда подобное случается и нам необходимо эту ситуацию избежать, нужно передать в метод ignoring эти классы исключительных ситуаций:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;Wait&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;ignoring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StaleElementReferenceException&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ElementNotVisibleException&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Объект &lt;code&gt;Wait&lt;/code&gt; сам по себе ничего не ждет, есму необходимо сообщить нужное состояние которое он ожидает, посредством его метода &lt;code&gt;until&lt;/code&gt;. Состояния (conditions) могут быть следующими:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;visibilityOfElementLocated(By locator)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visibilityOf(WebElement element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textToBePresentInElement(By locator, String text)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;titleContains(String title)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;presenceOfElementLocated(By locator)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;presenceOfAllElementsLocatedBy(By locator)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;invisibilityOfElementLocated(By locator)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;invisibilityOfElementWithText(By locator, String text)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;elementToBeClickable(By locator)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stalenessOf(WebElement element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alertIsPresent()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;until&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExpectedConditions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;presenceOfElementLocated&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"smth"&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;негативные состояния задаются следующим образом:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;until&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExpectedConditions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExpectedConditions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;presenceOfElementLocated&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"smth"&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Есть возможность создавать свои состояния:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="n"&gt;Function&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;?&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;isTextPresent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ExpectedCondition&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@Override&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Boolean&lt;/span&gt; &lt;span class="nf"&gt;apply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;webDriver&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="n"&gt;webDriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"div"&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
 &lt;span class="o"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;так же можно воспользоваться классом Predicate&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Predicate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;isTableLoaded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Predicate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@Override&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;apply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;webDriver&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WebElement&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webDriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"table"&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;findElements&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;tagName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tr"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary></entry><entry><title>"Вопросы по java на интервью 2"</title><link href="http://qa7.ru/blog/2014/07/07/voprosy-po-java-na-interviu-2/" rel="alternate"></link><updated>2014-07-07T14:42:36+02:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-07-07:blog/2014/07/07/voprosy-po-java-na-interviu-2/</id><summary type="html">&lt;p&gt;Продолжим с вопросами. &lt;/p&gt;
&lt;h3&gt;Как перевернуть строку?&lt;/h3&gt;
&lt;p&gt;наверно самый популярный вопрос на собеседованиях по java. Естественно от вас не ожидают использования вспомогательных классов типа &lt;code&gt;StringBuffer&lt;/code&gt;. Есть несколько вариантов решения, я покажу самый простой:
&lt;!--more--&gt;&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.company&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Main&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;reverseByArray&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Hello world!!"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverseByArray&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// !!dlrow olleH&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3&gt;Написать программу которая отсортирует массив методом пузырька&lt;/h3&gt;
&lt;p&gt;Собственно тут нечего комментировать и так все понятно:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.company&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Arrays&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Main&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//testing our bubble sort method in Java&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;unsorted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;bubbleSort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//one more testing of our bubble sort code logic in Java&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;bubbleSort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;bubbleSort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unsorted array before sorting : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

        &lt;span class="c1"&gt;// Outer loop - need n-1 iteration to sort n elements&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

            &lt;span class="c1"&gt;//Inner loop to perform comparision and swapping between adjacent numbers&lt;/span&gt;
            &lt;span class="c1"&gt;//After each iteration one index from last is sorted&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;

                &lt;span class="c1"&gt;//If current number is greater than swap those two&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt;
                    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
                    &lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
                    &lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unsorted array after %d pass %s: %n"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unsorted&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3&gt;Написать программу которая выдаст последовательность чисел Фибоначи&lt;/h3&gt;
&lt;p&gt;Пришлось пару раз написать такую на интервью. В обстановке стресса иногда непросто догадаться об очевидных вещах&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.company&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Scanner&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Main&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//input to print Fibonacci series upto how many numbers&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter number upto which Fibonacci series to print: "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Scanner&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;in&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;nextInt&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Fibonacci series upto "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" numbers : "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;//printing Fibonacci series upto number&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fibonacci2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;


    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;     * Java program for Fibonacci number using recursion.&lt;/span&gt;
&lt;span class="cm"&gt;     * This program uses tail recursion to calculate Fibonacci number for a given number&lt;/span&gt;
&lt;span class="cm"&gt;     * @return Fibonacci number&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//tail recursion&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;     * Java program to calculate Fibonacci number using loop or Iteration.&lt;/span&gt;
&lt;span class="cm"&gt;     * @return Fibonacci number&lt;/span&gt;
&lt;span class="cm"&gt;     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fibonacci2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fibo1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fibo2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
            &lt;span class="n"&gt;fibonacci&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fibo1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fibo2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//Fibonacci number is sum of previous two Fibonacci number&lt;/span&gt;
            &lt;span class="n"&gt;fibo1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fibo2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;fibo2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//Fibonacci number&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3&gt;В чем разница между структурами данных Stack и Queue?&lt;/h3&gt;
&lt;p&gt;Тоже классический вопрос. Я так полагаю все знают на него ответ. Нет? Ок, объясняю :) Stack(стопка) это структура данных типа LIFO(Last In First Out), т.е. стандартная стопка, последнее положил и первая вылетела. В тоже время Queue(очередь) это структура типа FIFO(First In First Out), т.е. стандартная очередь, первый пришел и первый же вышел. Все как в жизни :)&lt;/p&gt;
&lt;p&gt;Пока на этом все :) Stay tuned...&lt;/p&gt;</summary></entry><entry><title>"Вопросы по Java на интервью"</title><link href="http://qa7.ru/blog/2014/06/22/voprosy-po-java-na-interviu/" rel="alternate"></link><updated>2014-06-22T10:28:14+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-06-22:blog/2014/06/22/voprosy-po-java-na-interviu/</id><summary type="html">&lt;hr/&gt;
&lt;p&gt;Тестировщиков, а особенно автоматизаторов очень часто на интервью спрашивают про языки программирования. Причем вопросы порой уровнем не ниже middle разработчика. Возникла у меня идея под тэгом &lt;code&gt;интервью&lt;/code&gt; собирать вопросы которые мне (и не только) задавали на собеседованиях и наверно по возможности буду писать ответы на них. Самые популярные вопросы  это вопросы по алгоритмам и на понимание структур данных.&lt;/p&gt;
&lt;h3&gt;Как найти средний элемент в связанном списке за один проход?&lt;/h3&gt;
&lt;p&gt;&lt;!--more--&gt;
Один из самых популярных вопросов, мне его задавали как минимум трижды, ответил я на него только на третий раз :)
В чем тут трудность? Любой программист и иже с ним, знает как найти средний элемент(есть вариации вопроса, когда просят найти 4й элемент с конца, или 3й и т.д.) за 2 прохода. За первый проход он узнает длинну списка (т.е. перебирает список до тех пор пока не наткнется на &lt;code&gt;null&lt;/code&gt;), за второй же проход он перебирая список уже наполовину его длинны получает нужный эленмент. А когда просят найти все это дело за один проход, наступает ступор (т.к. собеседования это всетки стресс, и быстро сообразить что-либо трудно). Решение тут простое, необходимо завести 2 указателя. Первый будет увеличиваться (инкрементирорваться :) ппц  какие сложности с англицизмами) каждый элемент, второй каждые 2 элемента. Соответственно когда перый указатель достигнет конца, второй будет указывать на средний элемент.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.company&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LinkedListTest&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;


    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//creating LinkedList with 5 elements including head&lt;/span&gt;
        &lt;span class="n"&gt;LinkedList&lt;/span&gt; &lt;span class="n"&gt;linkedList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;head&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"7"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"8"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"9"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"11"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"13"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"14"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;linkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"15"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

        &lt;span class="c1"&gt;//finding middle element of LinkedList in single pass&lt;/span&gt;
        &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"length of LinkedList: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"middle element of LinkedList : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"head"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;data&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setData&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="nf"&gt;next&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setNext&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3&gt;Что если этот список зациклен?&lt;/h3&gt;
&lt;p&gt;Этот вопрос возникает как правило после успешного ответа на предыдущий. Собственно ответ вытекает также из предыдущего. Если каждый указатель который мы поддерживаем будет указывать на одну и туже ноду, то это означает что данный список зациклен.&lt;/p&gt;
&lt;h3&gt;Как найти 3-й элемент с конца в связанном списке за один проход&lt;/h3&gt;
&lt;p&gt;Ответ тот же, что и на первый вопрос, только второй указатель должен указывать на 3й элемент от первого&lt;/p&gt;
&lt;h3&gt;Есть массив состоящий из элементов типа int от 1 до 100, один из элементов продублирован, как его найти?&lt;/h3&gt;
&lt;p&gt;Достаточно простой вопрос. Здесь достаточно просто сложить все числа в массиве и вычесть из него сумму массива который не содержит продублированного элемента, в итоге получим искомый элемент.&lt;/p&gt;
&lt;p&gt;на этом пока все &lt;em&gt;to be continued...&lt;/em&gt;&lt;/p&gt;</summary></entry><entry><title>"Про атрибуты (Boolean)"</title><link href="http://qa7.ru/blog/2014/05/31/pro-atributy-boolean/" rel="alternate"></link><updated>2014-05-31T08:31:39+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-05-31:blog/2014/05/31/pro-atributy-boolean/</id><summary type="html">&lt;p&gt;Как выяснилось атрибуты элементов в HTML бывают разные. Более того, они бывают разных типов. Начнем с &lt;strong&gt;Boolean&lt;/strong&gt;:
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2&gt;Boolean&lt;/h2&gt;
&lt;p&gt;Есть атрибуты которые имеют значение &lt;strong&gt;boolean&lt;/strong&gt; например в HTML 4.01 их не мало:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;checked&lt;/code&gt;             (input type=checkbox/radio)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;selected&lt;/code&gt;           (option)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disabled&lt;/code&gt;          (input, textarea, button, select, option, optgroup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readonly&lt;/code&gt;         (input type=text/password, textarea)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multiple&lt;/code&gt;        (select)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ismap&lt;/code&gt; &lt;code&gt;isMap&lt;/code&gt;     (img, input type=image)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;defer&lt;/code&gt;               (script)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;declare&lt;/code&gt;             (object; never used)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noresize&lt;/code&gt; &lt;code&gt;noResize&lt;/code&gt;  (frame)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nowrap&lt;/code&gt; &lt;code&gt;noWrap&lt;/code&gt;    (td, th; deprecated)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noshade&lt;/code&gt; &lt;code&gt;noShade&lt;/code&gt;   (hr; deprecated)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compact&lt;/code&gt;             (ul, ol, dl, menu, dir; deprecated)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;у булевских атрибутов есть интересное свойство. Само их наличие является &lt;code&gt;true&lt;/code&gt;. И не важно какое при этом у них значение. Даже если атрибут &lt;code&gt;selected='false'&lt;/code&gt; то это все равно будет равнозначно &lt;code&gt;selected='true'&lt;/code&gt;, поэтому selenium всегда возвращает &lt;code&gt;true&lt;/code&gt; при проверке их значений в исходниках.&lt;/p&gt;</summary></entry><entry><title>"Если WebDriver кликает не туда"</title><link href="http://qa7.ru/blog/2014/05/25/esli-webdriver-klikaet-ne-tuda/" rel="alternate"></link><updated>2014-05-25T09:03:39+02:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-05-25:blog/2014/05/25/esli-webdriver-klikaet-ne-tuda/</id><summary type="html">&lt;p&gt;Сразу скажу, что такого не бывает. На самом деле Webdriver кликает именно туда куда ему сказали. В большенстве случаев эта проблема вызвана тривиальными причинами как-то различные environments, когда на одном проверяешь и пишешь xpath локаторы, тесты запускаются на другом. В этом случае возможны разные варианты:
&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;не подгрузилась какая-либо js библиотека&lt;/li&gt;
&lt;li&gt;размер окон, фреймов, элементов различный&lt;/li&gt;
&lt;li&gt;какойто элемент наехал на другой&lt;/li&gt;
&lt;li&gt;различные браузеры&lt;/li&gt;
&lt;li&gt;и т.д.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Нужно всегда добиваться того чтобы окружения были максимально схожи&lt;/p&gt;
&lt;p&gt;Еще бывает бональная не внимательность. О сколько времени потрачено зря, когда я случайно ставил лишний пробел или забывал что кавычки двойные и одинарные это разные символы. Да много всего.&lt;/p&gt;
&lt;p&gt;Единственный совет перепроверяйте и будьте внимательны.&lt;/p&gt;</summary></entry><entry><title>"Еду в Варшаву"</title><link href="http://qa7.ru/blog/2014/05/23/edu-v-varshavu/" rel="alternate"></link><updated>2014-05-23T08:45:04+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-05-23:blog/2014/05/23/edu-v-varshavu/</id><summary type="html">&lt;p&gt;Не внезапно, но многое решится в этой поездке. Встречусь с друзьями. Если все будет удачно расскажу. &lt;/p&gt;</summary></entry><entry><title>"Метрика качества по релизам"</title><link href="http://qa7.ru/blog/2014/05/18/metrika-kachestva-po-relizam/" rel="alternate"></link><updated>2014-05-18T10:20:28+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-05-18:blog/2014/05/18/metrika-kachestva-po-relizam/</id><summary type="html">&lt;p&gt;Внезапно возникла необходимость оценки качества релизов на различных проектах. Собственно входные условие следующие:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;С десяток проектов&lt;/li&gt;
&lt;li&gt;На каждом проекте своя команда разработки и тестирования&lt;/li&gt;
&lt;li&gt;На каждом проекте от 0.5 до 3 тестировщиков&lt;/li&gt;
&lt;li&gt;Релизы происходят у каждой команды в разное время (от 1 раз в месяц до 1 раза в полгода)&lt;/li&gt;
&lt;li&gt;Циклы (итерации) у каждой команды разные (от 1 недели до 2х недель)&lt;/li&gt;
&lt;li&gt;Оценка должна показывать качество выпущенного релиза:&lt;/li&gt;
&lt;li&gt;как за определенный отрезок времени (2 недели, месяц)&lt;/li&gt;
&lt;li&gt;так и за релиз (отрезок времени между релизами)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Долго думали. Не буду мучать различными вариантами. В итоге вывели формулу:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(Sрелиз/ Sобщ) * 100% = Q&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;где &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sрелиз&lt;/code&gt; - количество дефектов найденое в процессе эксплуатации&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sобщ&lt;/code&gt; - количество дефектов найденое в процессе разработки&lt;/p&gt;
&lt;p&gt;Формула мягко говоря очень общая, но пока ничего лучшего придумано не было&lt;/p&gt;</summary></entry><entry><title>"Как запустить браузер с нужным плагином [WebDriver]"</title><link href="http://qa7.ru/blog/2014/03/09/kak-zapustit-brauzer-s-nuzhnym-plaginom-webdriver/" rel="alternate"></link><updated>2014-03-09T15:09:03+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-03-09:blog/2014/03/09/kak-zapustit-brauzer-s-nuzhnym-plaginom-webdriver/</id><summary type="html">&lt;p&gt;Продолжаю капитанить :) на самом деле пишу больше для себя чтобы потом быстро найти.
Как известно webdriver всегда запускает новый чистый профиль Firefox и прогоняет на нем тесты. Однако иногда не лишнее иметь в этом браузере плагин типа firebug, чтобы быстренько что-либо посмотреть "глазами webdriver" на тестируемой странице. 
Делается это просто, необходимо иметь на машине где запускается браузер, плагин с расширением &lt;code&gt;.xpi&lt;/code&gt; например &lt;code&gt;firebug-1.12.7-fx.xpi&lt;/code&gt;.&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;FirefoxProfile&lt;/span&gt; &lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FirefoxProfile&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addExtension&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pathToExtension&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setPreference&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"extensions.firebug.currentVersion"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"X.X.X"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FirefoxDriver&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;где &lt;code&gt;pathToExtension&lt;/code&gt; - путь к расширению с расширением &lt;code&gt;.xpi&lt;/code&gt;
в строке &lt;code&gt;profile.setPreference("extensions.firebug.currentVersion", "X.X.X");&lt;/code&gt; вместо &lt;code&gt;X.X.X&lt;/code&gt; нужно написать версию плагина больше чем тот который мы устанавливаем, например: &lt;code&gt;profile.setPreference("extensions.firebug.currentVersion", "1.12.8");&lt;/code&gt;. Это нужно для того чтобы браузер не открывал страницу с описанием плагина.&lt;/p&gt;</summary></entry><entry><title>"Как использовать javaScript в selenium"</title><link href="http://qa7.ru/blog/2014/02/27/kak-ispolzovat-javascript-v-selenium/" rel="alternate"></link><updated>2014-02-27T21:05:32+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-02-27:blog/2014/02/27/kak-ispolzovat-javascript-v-selenium/</id><summary type="html">&lt;p&gt;Иногда в следствии сложной верстки некоторые элементы становятся недоступны/ограниченны для взоимодействия с ними посредством тех методов и свойств, что предоставляет нам интерфейс WebElement. Например есть группа элементов &lt;code&gt;li&lt;/code&gt; в каком-нить контейнере, часть которых невидима (например имеют стиль &lt;code&gt;display: none&lt;/code&gt;), и соответственно selenium ругается при попытке например кликнуть по ним. Чтобы кликнуть необходимо проскроллировать этот элемент в видимую облать экрана. Это можно сделать двумя способами:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;с помощью js метода глобального объекта window - &lt;code&gt;window.scrollTo(x, y)&lt;/code&gt;; где x, y координаты необходиого элемента&lt;!--more--&gt;&lt;/li&gt;
&lt;li&gt;либо с помощью js метода, который есть у каждого элемента DOM - &lt;code&gt;scrollIntoView()&lt;/code&gt;&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;scrollElementIntoView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebElement&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;JavascriptExecutor&lt;/span&gt; &lt;span class="n"&gt;javascriptExecutor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JavascriptExecutor&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;javascriptExecutor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeScript&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"window.scrollTo("&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLocation&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;", &lt;/span&gt;
&lt;span class="s"&gt;    "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLocation&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;");"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;scrollElementIntoView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebElement&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;JavascriptExecutor&lt;/span&gt; &lt;span class="n"&gt;javascriptExecutor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JavascriptExecutor&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;javascriptExecutor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeScript&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"var element = document.getElementById('"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getAttribute&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;&lt;span class="s"&gt;"');"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"element.scrollIntoView();"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>"#loveQA Конференция для тестировщиков"</title><link href="http://qa7.ru/blog/2014/02/15/loveqa-konferentsiia-dlia-testirovshchikov/" rel="alternate"></link><updated>2014-02-15T18:15:48+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-02-15:blog/2014/02/15/loveqa-konferentsiia-dlia-testirovshchikov/</id><summary type="html">&lt;p&gt;Сегодня посетил конференцию для тестировщиков которую организовала компания &lt;a href="http://corp.badoo.com/ru/"&gt;Badoo&lt;/a&gt;. Отличное получилось мероприятие, познакомился с новыми людьми. Устроил настоящий допрос докладчикам по мобильной тематике. Был доклад от единственного!! тестировщика API компании Qiwi, на нем я особо оторвался. Организаторы большие молодцы, устроили вебтрансляцию мероприятия, организовали вкусный обед, а после устроили пивную вечеринку с настоящим немецким пивом! Так же в программе была экскурсия по офису. Вобщем было круто, давно не было таких мероприятий.
&lt;!--more--&gt;
Доклады были следующие: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;«Есть ли жизнь после релиза? Наш опыт тестирования мобильных приложений». Александр Хозя &amp;amp; Николай Козлов&lt;/li&gt;
&lt;li&gt;«Continuous delivery в крупном интернет проекте» Владислав Чернов&lt;/li&gt;
&lt;li&gt;«AIDA. Эволюция автоматизации работы с Git, JIRA и TeamCity» Александр Ильин &amp;amp; Олег Оямяэ&lt;/li&gt;
&lt;li&gt;«Selenium тесты. От RC и одного пользователя к WebDriver, Page Object и пулу пользователей”.Виталий Котов&lt;/li&gt;
&lt;li&gt;«Как мы разгоняли тесты — от баш-скриптов до облака» Илья Кудинов&lt;/li&gt;
&lt;li&gt;«Системы обнаружения уязвимостей в веб приложении на примере Badoo» Станислав Еремин&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>"Немного Питера"</title><link href="http://qa7.ru/blog/2014/01/30/nemnogo-pitera/" rel="alternate"></link><updated>2014-01-30T20:48:52+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-30:blog/2014/01/30/nemnogo-pitera/</id><summary type="html">&lt;p&gt;Ездили в Питер, посмотрели город. Было морозно, температура выше -20 не поднималась. Собственно поэтому фоткал мало. Город понравился. Не знаю почему, но мне показалось, что люди в Питере менее злые чем в Москве. По ссылке немножко фотографий.&lt;/p&gt;
&lt;p&gt;ЗЫ
Решил пожалеть Github и выложил фотки на Flickr&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/ekhalimov/sets/72157640313028506/"&gt;Питер&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>"Опять начал ковырять JavaScript"</title><link href="http://qa7.ru/blog/2014/01/18/opiat-nachal-kovyriat-javascript/" rel="alternate"></link><updated>2014-01-18T12:24:07+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-18:blog/2014/01/18/opiat-nachal-kovyriat-javascript/</id><summary type="html">&lt;p&gt;Есть у меня проектик на &lt;a href="https://github.com/biomaks/money"&gt;Github&lt;/a&gt; я его перенес с Bitbucket на всеобщее обозрение. Затеял я его в целях изучения технологий java, javascript, mongo и т.д. Ну так вот, периодически, примерно раз в 2 месяца, я сажусь за него и пытаюсь реализовать чтонибудь. По сути этот проект представляет собой web приложение которое помогает вести учет личных финансов. При написании его я использовал следующие технологии:
&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;Maven&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sparkjava.com/"&gt;Spark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://freemarker.org/"&gt;Freemarker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;JQuery&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Вот  в этот раз мне ударило в голову переписать Категории, это тот функционал который позволяет добавлять различные категории трат и доходов пользователю. Решил использовать js библиотечку, а точнее jquery плагин &lt;a href="http://file.urin.take-uma.net/jquery.balloon.js-Demo.html"&gt;jquery.balloon.js&lt;/a&gt;, она позволяет создавать по наведению на элемент так называемый balloon, облочко в котором что-то написано.&lt;/p&gt;
&lt;p&gt;В принцепе на демо-странице все понятно описано, но я все же приведу пример:
Во первых элемент должен иметь title, по умолчанию отображается в облачке именно он, либо нужно передать в метод ballon опцию: &lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;content: 'some content'
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Пример создания простого облачка:&lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="o"&gt;$(&lt;/span&gt;&lt;span class="s1"&gt;'.sample2'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nc"&gt;.balloon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"bottom right"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Плагин очень легкий, и позволяет достаточно гибкие настройки. Например содержимое облачка: &lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;ajaxComplete&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;classname&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"top"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;offsetX&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;offsetY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;tipSize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;minLifetime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;showDuration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;showAnimation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;hideDuration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;hideAnimation&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fadeOut&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;Или CSS которое передается в метод baloon как опция: &lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;css&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;minWidth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"20px"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"5px"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;borderRadius&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"6px"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"solid 1px #777"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;boxShadow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"4px 4px 4px #555"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"#666"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;backgroundColor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"#efefef"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"0.85"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;zIndex&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"32767"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;textAlign&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"left"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary></entry><entry><title>"Купил пару книг по тестированию"</title><link href="http://qa7.ru/blog/2014/01/12/kupil-paru-knig-po-testirovaniiu/" rel="alternate"></link><updated>2014-01-12T19:04:14+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-12:blog/2014/01/12/kupil-paru-knig-po-testirovaniiu/</id><summary type="html">&lt;hr/&gt;
&lt;p&gt;Перед новым годом, компания Pucktpub проводила распродажу книг, любую электронную книгу можно было купить за 5£. Я купил две: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.packtpub.com/recipes-to-master-selenium-2-testing-tools-cookbook/book" title="Selenium Testing Tools Cookbook"&gt;Selenium Testing Tools Cookbook&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.packtpub.com/application-testing-with-capybara/book" title="Application Testing with Capybara"&gt;Application Testing with Capybara&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Не смотря на то, что я не новичек в селениуме, я всетки достаточно почерпнул нового из первой книги, читать еще не закончил. Там есть несколько разделов которые хотелось бы разобрать на практике на живом примере.&lt;/p&gt;
&lt;p&gt;Начал читать вторую книгу, она посвящена такому модному поветрию функционального тестирования как  Behavior Driven. Много ruby кода, который я не очень хорошо понимаю. По сути Capybara расширяет популярный фреймворк Cucumber DSL-ом (domain-specific language) т.е. позволяет еще более очеловечить тесты :) Так же он предоставляет специальные методы которые реализуют различные ожидания, что позволяет лучше работать с приложениями написанные с использованием Ajax.Позднее я напишу об этом фреймворке больше, по мере осиливания этой книги :)) &lt;/p&gt;</summary></entry><entry><title>"Париж 2013. (фото)"</title><link href="http://qa7.ru/blog/2014/01/07/parizh-2013-foto/" rel="alternate"></link><updated>2014-01-07T15:00:01+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-07:blog/2014/01/07/parizh-2013-foto/</id><summary type="html">&lt;p&gt;Несколько фотографий из поездки в Париж.
&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img1.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img2.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img3.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img4.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img5.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img6.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img7.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img8.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img9.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img10.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img11.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img12.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img13.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img14.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img15.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img16.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img17.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img18.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img19.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img20.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img21.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img22.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img23.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img24.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img25.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img26.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img27.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img28.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img29.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img30.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img31.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img32.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img33.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img34.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img35.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img36.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img37.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img38.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img39.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img40.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img41.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img42.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img43.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img44.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img45.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img46.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img47.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img48.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img49.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img50.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img51.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img52.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img53.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img54.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img55.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img56.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img57.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img58.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img59.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img60.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img61.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img62.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img63.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img64.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img65.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img66.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img67.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img68.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img69.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img70.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img71.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img72.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img73.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img74.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img75.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img76.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img77.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img78.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img79.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img80.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img81.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img82.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img83.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img84.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img85.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img86.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img87.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img88.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img89.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img90.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img91.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img92.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img93.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img94.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img95.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img96.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img97.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img98.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img99.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img100.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img101.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img102.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img103.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img104.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img105.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img106.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img107.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img108.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img109.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img110.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img111.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img112.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img113.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img114.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img115.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img116.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img117.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img118.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img119.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img120.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img121.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img122.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img123.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img124.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img125.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img126.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img127.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img128.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img129.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img130.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img131.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img132.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img133.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img134.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img135.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img136.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img137.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img138.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img139.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img140.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img141.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img142.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img143.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img144.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img145.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img146.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img147.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img148.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img149.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img150.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img151.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img152.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paris" src="http://qa7.ru/images/gallery/paris2013/img153.jpg" style="width: 480px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;</summary></entry><entry><title>"Маленькие светофоры"</title><link href="http://qa7.ru/blog/2014/01/07/malenkie-svetofory/" rel="alternate"></link><updated>2014-01-07T09:58:36+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-07:blog/2014/01/07/malenkie-svetofory/</id><summary type="html">&lt;p&gt;В Париже везде стоят такие мальнькие светофоры. Так как они полностью повторяют сигналы большого, я так понял они стоят для удобства водителей, т.к. перед стоп линией большой светофор почти всегда не видно.
&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://farm3.staticflickr.com/2841/11128473066_0d4c51b944_z.jpg"&gt;Foto&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>"Снятие скриншотов с помощью WebDriver"</title><link href="http://qa7.ru/blog/2014/01/06/sniatie-skrinshotov-s-pomoshchiu-webdriver/" rel="alternate"></link><updated>2014-01-06T18:55:57+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-06:blog/2014/01/06/sniatie-skrinshotov-s-pomoshchiu-webdriver/</id><summary type="html">&lt;p&gt;Снятие скриншотов достаточно простая задача. В селениуме есть интерфейс TakesScreenshot который предоставляет возможность делать скриншоты веб-странницы. &lt;/p&gt;
&lt;table class="codehilitetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.File&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.io.FileUtils&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.openqa.selenium.WebDriver&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.openqa.selenium.firefox.FirefoxDriver&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.openqa.selenium.By&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.openqa.selenium.OutputType&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.openqa.selenium.TakesScreenshot&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.openqa.selenium.WebElement&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.junit.After&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.junit.Before&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.junit.Test&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ScreenshotTests&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;@Before&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FirefoxDriver&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://www.google.com"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Test&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testTakesScreenshot&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="n"&gt;scrFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;TakesScreenshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;getScreenshotAs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OutputType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;FileUtils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scrFile&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"c:\\scr\\main_page.png"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;


    &lt;span class="nd"&gt;@After&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;teadDown&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;quit&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary></entry><entry><title>"Первый пост"</title><link href="http://qa7.ru/blog/2014/01/06/pervyi-post/" rel="alternate"></link><updated>2014-01-06T15:58:04+04:00</updated><author><name>Erik</name></author><id>tag:qa7.ru,2014-01-06:blog/2014/01/06/pervyi-post/</id><summary type="html">&lt;p&gt;Всем привет! Это мой первый пост на этом блоге. Буду писать(надеюсь что не брошу) о всем, что мне интересно, о тестировании, об IT, о жизни )) &lt;/p&gt;</summary></entry></feed>